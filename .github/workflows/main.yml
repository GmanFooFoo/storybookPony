name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality:
    name: Quality Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check types
        id: type-check
        run: npm run type-check
        
      - name: Check linting
        id: lint
        run: npm run lint
        
      - name: Check formatting
        id: format
        run: npm run format:check
        
      - name: Run tests
        id: test
        run: npm run test
        
      - name: Report Status
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const { job, conclusion } = context.payload;
            const steps = ['type-check', 'lint', 'format', 'test'];
            
            const failed = steps.some(step => steps[step]?.conclusion === 'failure');
            
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'quality',
              head_sha: context.sha,
              status: 'completed',
              conclusion: failed ? 'failure' : 'success',
              output: {
                title: 'Quality Check Results',
                summary: failed ? 'Some quality checks failed' : 'All quality checks passed'
              }
            });

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: quality
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        id: build
        run: npm run build
        
      - name: Report Status
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'build',
              head_sha: context.sha,
              status: 'completed',
              conclusion: steps.build.outcome === 'success' ? 'success' : 'failure',
              output: {
                title: 'Build Check Results',
                summary: steps.build.outcome === 'success' ? 'Build succeeded' : 'Build failed'
              }
            }); 